/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bspc_esc: backspace_escape {
            compatible = "zmk,behavior-hold-tap";
            label = "BACKSPACE_ESCAPE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        opt_spc_shift: option_space_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_release>,
                <&kp LALT>;
        };

        word_left_mac: word_left_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHFT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;
        };

        word_right_mac: word_right_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LSHFT &kp LALT>;
        };

        word_left_win: word_left_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LSHFT &kp LCTRL>;
        };

        word_right_win: word_right_win {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHFT>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LSHFT &kp LCTRL>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bottomThumbEsc {
            bindings = <&kp ESCAPE>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I             &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K             &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA         &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                              &kp LEFT_ALT  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_COMMAND
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp ESCAPE
&kp LEFT_CONTROL  &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &kp RIGHT_SHIFT
                                              &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR        &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DELETE
&kp LCTRL  &trans    &trans  &trans    &trans          &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans          &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &opt_spc_shift  &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        tri_layer {
            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |     |     |     |     |      |
            // |      |     |     |     |     |     |   |     | W← M|     | W→ M|     |      |
            // |      |     |     |     |     |     |   |     | W← W|     | W→ W|     |      |
            //                    |     |     |     |   |     |     |     |

            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans  &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &word_left_mac  &trans  &word_right_mac  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &word_left_win  &trans  &word_right_win  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };
    };
};
